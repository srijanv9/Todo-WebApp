{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","useState","newtask","setnewtask","tasks","settasks","taskslist","map","object","index","className","onClick","duplicatearray","splice","deletetask","type","placeholder","value","onChange","e","target","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2MAAe,I,kBCwCAA,MApCf,WACE,MAA6BC,mBAAS,IAAtC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAyBF,mBAAS,IAAlC,mBAAOG,EAAP,KAAeC,EAAf,KAWMC,EAAUF,EAAMG,KAAI,SAACC,EAAOC,GAChC,OAAM,sBAAKC,UAAU,6BAAf,UACJ,qBAAIA,UAAU,qBAAd,UACGD,EAAM,EADT,IACaD,KAEb,wBAAQG,QAAS,YAXrB,SAAoBF,GAChB,IAAIG,EAAe,YAAIR,GACvBQ,EAAeC,OAAOJ,EAAM,GAC5BJ,EAASO,GAQaE,CAAWL,IAASC,UAAU,8BAApD,0BAKJ,OACE,sBAAKA,UAAU,MAAf,UACE,6BAAI,wDACJ,sBAAKA,UAAU,6BAAf,UACI,uBAAOK,KAAK,OAAOC,YAAY,YAAYN,UAAU,eACrDO,MAAOf,EAASgB,SAAU,SAACC,GAAKhB,EAAWgB,EAAEC,OAAOH,UAEpD,wBAAQN,QA1BhB,WACEN,EAAS,GAAD,mBAAKD,GAAL,CAAWF,MAyBaQ,UAAU,+BAApC,yBAETJ,MCxBce,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.adfd3661.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport bootstrap from '../node_modules/bootstrap/dist/css/bootstrap.min.css'\nimport { useState } from 'react';\nfunction App() {\n  const[ newtask , setnewtask]=useState('')\n  const[ tasks , settasks]=useState([])\n\n  function addtask(){\n    settasks([...tasks,newtask])\n  }\n  function deletetask(index){\n      var duplicatearray=[...tasks]\n      duplicatearray.splice(index,1)\n      settasks(duplicatearray)\n  }\n\n  const taskslist=tasks.map((object,index)=>{ \n    return<div className='row justify-content-center'>\n      <h1 className='col-md-6 text-left'>\n        {index+1}-{object}\n      </h1>\n      <button onClick={()=>{deletetask(index)}} className='col-md-1 btn btn-danger m-1'>\n        Delete\n      </button>\n    </div>\n  })\n  return (\n    <div className=\"App\">\n      <h1><b>TODO LIST USING REACT</b></h1>\n      <div className='row justify-content-center'>\n          <input type=\"text\" placeholder=\"Task Name\" className='col-md-6 m-1'\n          value={newtask} onChange={(e)=>{setnewtask(e.target.value)}}\n          />\n          <button onClick={addtask} className='btn btn-success col-md-1 m-1'>ADD TASK</button>\n</div>\n{taskslist}\n    </div>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}